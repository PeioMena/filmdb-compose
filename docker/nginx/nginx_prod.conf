server {
    listen 443 ssl http2;
    server_name ${:servername};

    access_log  /var/log/nginx/${:servername}_access.log;
    error_log  /var/log/nginx/${:servername}_error.log;

    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/html text/plain application/xml text/css application/x-javascript text/javascript image/svg+xml application/javascript;

    ssl_certificate ${ssl-certificate-path};
    ssl_certificate_key ${ssl-certificate-privatekey-path};

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # Generate this file running as root the following command:

    #  $ sudo mkdir -p /etc/nginx/ssl
    #  $ sudo openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /etc/letsencrypt/live/ermuamugi.korpoweb.com/fullchain.pem;

    resolver 8.8.8.8;

    location / {
        proxy_pass  http://unix:${buildout:directory}/gunicorn.sock;
        proxy_set_header X-Forwarded-Protocol ssl;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_redirect              off;
        proxy_set_header            Host $host;
        proxy_set_header            X-Real-IP $remote_addr;
        proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size        200m;
        client_body_buffer_size     128k;
        proxy_connect_timeout       300;
        proxy_send_timeout          90;
        proxy_read_timeout          90;
        proxy_buffer_size           4k;
        proxy_buffers               4 32k;
        proxy_busy_buffers_size     64k;
        proxy_temp_file_write_size  64k;
    }


    location /static  {
        alias ${buildout:directory}/../static;
        expires 8d;

    }

    location /media  {
        alias ${buildout:directory}/../media;
        expires 8d;
    }
    location /data {
        alias ${buildout:directory}/../exports;
        auth_basic "Area pribatua";
        auth_basic_user_file ${buildout:directory}/.htpasswd;
        autoindex on;
    }
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: ";
    }

    location = /favicon.ico {
        root ${buildout:directory}/../static/;
    }

    error_page   500 502  503 504  /50x.html;
    location =  /50x.html {
        root    html;
    }


}


server {
    listen 80;
    server_name ${:servername} www.${:servername};
    rewrite ^/(.*) https://${:servername}/$1 permanent;

}

